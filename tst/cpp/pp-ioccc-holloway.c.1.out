# 1 "./pp-ioccc-holloway.c"
# 10 "./pp-ioccc-holloway.c"
long tab1[]={ 989L,5L,26L,0L,88319L,123L,0L,9367L };
int tab2[]={ 4,6,10,14,22,26,34,38,46,58,62,74,82,86 };

main(m1,s) char *s; {
    int a,b,c,d,o[((3 * 3 -(3 / 3))-(((3 / 3)+ 3)/2))],n=(int)s;
    if(m1==1){ char b[2*(3 * 3 -(3 / 3))+(3 -(3 / 3)-(((3 / 3)+ 3)/2))-(3 / 3)]; main(tab2[(((3 / 3)+ 3)/2)+ 3]/(((3 / 3)+ 3)/2)+(((3 / 3)+ 3)/2)+ 3,b); printf(b); }
    else switch(m1-=(((3 / 3)+ 3)/2)){
	case (3 -(3 / 3)-(((3 / 3)+ 3)/2)):
	    a=(b=(c=(d=(3 / 3))<<(3 / 3))<<(3 / 3))<<(3 / 3);
	    return(((n &(a|c))==(a|c))|((n &(b))==(b))|((n &(a|d))==(a|d))|((n &(c|d))==(c|d)));
	case (((3 / 3)+ 3)/2):
	    for(a=(3 -(3 / 3)-(((3 / 3)+ 3)/2));a<(3 * 3 -(3 / 3));++a)if(tab1[a]&&!(tab1[a]%((long)tab2[n]/(((3 / 3)+ 3)/2))))return(a);
	case (3 / 3):
	    if(n<(((3 / 3)+ 3)/2))return((3 / 3));
	    if(n<(3 * 3 -(3 / 3))){n-=(3 / 3);c='D';o[(3 -(3 / 3)-(((3 / 3)+ 3)/2))]=(((3 / 3)+ 3)/2);o[(3 / 3)]=(3 -(3 / 3)-(((3 / 3)+ 3)/2));}
	    else{c='\r'-'\b';n-=(3 * 3 -(3 / 3))-(3 / 3);o[(3 -(3 / 3)-(((3 / 3)+ 3)/2))]=o[(3 / 3)]=(3 / 3);}
	    if((b=n)>=3)for(b=(3 / 3)<<(3 / 3);b<n;++b)o[b]=o[b-(((3 / 3)+ 3)/2)]+o[b-(3 / 3)]+c;
	    return(o[b-(3 / 3)]%n+((3 * 3 -(3 / 3))-(((3 / 3)+ 3)/2))-(((3 / 3)+ 3)/2));
	default:
	    if(m1-=3) main(m1-(3 / 3)+ 3 +(((3 / 3)+ 3)/2),s+(3 / 3)); else *(s+(3 / 3))=(3 -(3 / 3)-(((3 / 3)+ 3)/2));
	    for(*s=a=(3 -(3 / 3)-(((3 / 3)+ 3)/2));a< 3;) *s=(*s<<3)|main((((3 / 3)+ 3)/2)+a++,(char *)m1);
	}
}
