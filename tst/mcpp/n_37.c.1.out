# 1 "./n_37.c"

 

 
# 8 "./n_37.c"
main( void)
{
    int     ABCDEFGHIJKLMNOPQRSTUVWXYZabcde = 31;
    int     ABCDEFGHIJKLMNOPQRSTUVWXYZabcd_ = 30;
    int     nest = 0;

    fputs( "started\n", stderr);

 
    assert(
        ABCDEFGHIJKLMNOPQRSTUVWXYZabcde
# 20 "./n_37.c"
        == 31);

 
# 24 "./n_37.c"
    assert( ABCDEFGHIJKLMNOPQRSTUVWXYZabcd_ == 30);

 
    nest = 0;
# 44 "./n_37.c"
                                nest = 8;
# 53 "./n_37.c"
    assert( nest == 8);

 
    nest = 0;
# 1 "nest1.h" 1
 

    nest = 1;

# 1 "nest2.h" 1
 

    nest = 2;

# 1 "nest3.h" 1
 

    nest = 3;

# 1 "nest4.h" 1
 

    nest = 4;

# 1 "nest5.h" 1
 

    nest = 5;

# 1 "nest6.h" 1
 

    nest = 6;

# 1 "nest7.h" 1
 

    nest = 7;

# 1 "nest8.h" 1
 

# 4 "nest8.h"
    nest = 8;
# 6 "nest7.h" 2
# 6 "nest6.h" 2
# 6 "nest5.h" 2
# 6 "nest4.h" 2
# 6 "nest3.h" 2
# 6 "nest2.h" 2
# 6 "nest1.h" 2
# 58 "./n_37.c" 2
    assert( nest == 8);

 
# 65 "./n_37.c"
    nest = 32;
# 67 "./n_37.c"
    assert( nest == 32);

 
    {
        char *  extremely_long_string1 =
"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567"
# 80 "./n_37.c"
        ;
        assert( strlen( extremely_long_string1) == 507);
    }

 
    {
    int a123456789012345678901234567890 = 123450;       int b123456789012345678901234567890 = 123451;       int c123456789012345678901234567890 = 123452;       int d123456789012345678901234567890 = 123453;       int e123456789012345678901234567890 = 123454;       int f123456789012345678901234567890 = 123455;       int A123456789012345678901234567890 = 123456;       int B123456789012345678901234567890 = 123457;       int C123456789012345678901234567890 = 123458;       int D1234567890123456789012 = 123459;
# 96 "./n_37.c"
        assert( a123456789012345678901234567890 == 123450
            && D1234567890123456789012 == 123459);
    }

 
# 1 "m1024.h" 1
 

# 102 "./n_37.c" 2
    assert( 1);

    fputs( "success\n", stderr);
    return  0;
}

