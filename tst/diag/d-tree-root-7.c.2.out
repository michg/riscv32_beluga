./d-tree-root-7.c:4:35: warning - missing prototype from `z'
      struct tag { struct tag *m; } z(), y;
                                    ^~~
./d-tree-root-7.c:6:5: warning - expression result not used
      +((f())? 0: 1);
      ^~~~~~~~~~~~~~
./d-tree-root-7.c:7:5: warning - expression result not used
      +((f())? (int)(x = 0): 1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:8:5: warning - expression result not used
      +((f())? 0: (int)(x = 0));
      ^~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:9:5: warning - expression result not used
      +((f())? (int)(x = 0): (int)(x = 0));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:10:12: ERROR - operands of ?: have illegal types `int' and `void'
      +((f())? 0: (void)(x = 0));
             ^ ~  ~~~~~~~~~~~~~
./d-tree-root-7.c:11:5: ERROR - operand of unary + has illegal type `void'
      +((f())? (void)(x = 0): (void)(x = 0));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:12:5: warning - expression result not used
      +((f())? (x = 0): (x = 1));
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:14:5: warning - expression result not used
      +((f())? 0: 1);
      ^~~~~~~~~~~~~~
./d-tree-root-7.c:15:5: warning - expression result not used
      +((f())? f(): 1);
      ^~~~~~~~~~~~~~~~
./d-tree-root-7.c:16:5: warning - expression result not used
      +((f())? (int)f(): 1);
      ^~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:17:5: warning - expression result not used
      +((f())? 0: f());
      ^~~~~~~~~~~~~~~~
./d-tree-root-7.c:18:5: warning - expression result not used
      +((f())? 0: (int)f());
      ^~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:19:5: warning - expression result not used
      +((f())? f(): f());
      ^~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:20:5: warning - expression result not used
      +((f())? (int)f(): (int)f());
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:21:12: ERROR - operands of ?: have illegal types `int' and `void'
      +((f())? 0: (void)f());
             ^ ~  ~~~~~~~~~
./d-tree-root-7.c:22:5: ERROR - operand of unary + has illegal type `void'
      +((f())? (void)f(): (void)f());
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-root-7.c:24:12: warning - expression result not used
      (f())? 0: 1;
             ^
./d-tree-root-7.c:25:12: warning - expression result not used
      (f())? (int)(x = 0): 1;
             ^~~~~~~~~~~~
./d-tree-root-7.c:26:12: warning - expression result not used
      (f())? 0: (int)(x = 0);
             ^
./d-tree-root-7.c:27:12: warning - expression result not used
      (f())? (int)(x = 0): (int)(x = 0);
             ^~~~~~~~~~~~
./d-tree-root-7.c:28:10: ERROR - operands of ?: have illegal types `int' and `void'
      (f())? 0: (void)(x = 0);
           ^ ~  ~~~~~~~~~~~~~
./d-tree-root-7.c:32:12: warning - expression result not used
      (f())? 0: 1;
             ^
./d-tree-root-7.c:33:17: warning - expression result not used
      (f())? f(): 1;
                  ^
./d-tree-root-7.c:34:12: warning - expression result not used
      (f())? (int)f(): 1;
             ^~~~~~~~
./d-tree-root-7.c:35:12: warning - expression result not used
      (f())? 0: f();
             ^
./d-tree-root-7.c:36:12: warning - expression result not used
      (f())? 0: (int)f();
             ^
./d-tree-root-7.c:38:12: warning - expression result not used
      (f())? (int)f(): (int)f();
             ^~~~~~~~
./d-tree-root-7.c:39:10: ERROR - operands of ?: have illegal types `int' and `void'
      (f())? 0: (void)f();
           ^ ~  ~~~~~~~~~
./d-tree-root-7.c:43:12: warning - expression result not used
      (f())? +(x = 0): +(x = 0);
             ^~~~~~~~
./d-tree-root-7.c:44:12: warning - expression result not used
      (f())? -(x = 0): -(x = 0);
             ^~~~~~~~
./d-tree-root-7.c:46:13: warning - expression result not used
      (f())? (1, (int)f()): (int)f();
              ^
./d-tree-root-7.c:46:16: warning - expression result not used
      (f())? (1, (int)f()): (int)f();
                 ^~~~~~~~
./d-tree-root-7.c:48:17: warning - expression result not used
      (f())? z(): *(y.m);
                  ^~~~~~
./d-tree-root-7.c:49:1: warning - missing return value
  }
  ^
