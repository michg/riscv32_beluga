./d-xtra-ttype-10.c:9:5: ERROR - function returns an incomplete type, `incomplete str' (aka `incomplete struct tag')
      f1();
      ^~~~
./d-xtra-ttype-10.c:10:5: ERROR - function returns an incomplete type, `incomplete vstr' (aka `volatile incomplete struct tag')
      f2();
      ^~~~
./d-xtra-ttype-10.c:27:9: ERROR - size must be known to define `Str'
      str Str;
          ^~~
./d-xtra-ttype-10.c:28:10: ERROR - size must be known to define `Vstr'
      vstr Vstr;
           ^~~~
./d-xtra-ttype-10.c:31:7: ERROR - type error in 1st argument to `h'; `myint' (aka `int') given for `incomplete str' (aka `incomplete struct tag')
      h(Myint, Vint, Myfloat, Pint, Pvint, Vstr);
        ^~~~~
./d-xtra-ttype-10.c:30:10: note - previous declaration was here
      void h(str, str, vstr, vstr, str, myint);
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-xtra-ttype-10.c:31:14: ERROR - type error in 2nd argument to `h'; `vint' (aka `volatile int') given for `incomplete str' (aka `incomplete struct tag')
      h(Myint, Vint, Myfloat, Pint, Pvint, Vstr);
               ^~~~
./d-xtra-ttype-10.c:30:10: note - previous declaration was here
      void h(str, str, vstr, vstr, str, myint);
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-xtra-ttype-10.c:31:20: ERROR - type error in 3rd argument to `h'; `myfloat' (aka `float') given for `incomplete vstr' (aka `volatile incomplete struct tag')
      h(Myint, Vint, Myfloat, Pint, Pvint, Vstr);
                     ^~~~~~~
./d-xtra-ttype-10.c:30:10: note - previous declaration was here
      void h(str, str, vstr, vstr, str, myint);
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-xtra-ttype-10.c:31:29: ERROR - type error in 4th argument to `h'; `pint' (aka `pointer to int') given for `incomplete vstr' (aka `volatile incomplete struct tag')
      h(Myint, Vint, Myfloat, Pint, Pvint, Vstr);
                              ^~~~
./d-xtra-ttype-10.c:30:10: note - previous declaration was here
      void h(str, str, vstr, vstr, str, myint);
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-xtra-ttype-10.c:31:35: ERROR - type error in 5th argument to `h'; `pvint' (aka `pointer to volatile int') given for `incomplete str' (aka `incomplete struct tag')
      h(Myint, Vint, Myfloat, Pint, Pvint, Vstr);
                                    ^~~~~
./d-xtra-ttype-10.c:30:10: note - previous declaration was here
      void h(str, str, vstr, vstr, str, myint);
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-xtra-ttype-10.c:31:42: ERROR - type error in 6th argument to `h'; `incomplete vstr' (aka `volatile incomplete struct tag') is an incomplete type
      h(Myint, Vint, Myfloat, Pint, Pvint, Vstr);
                                           ^~~~
./d-xtra-ttype-10.c:31:42: ERROR - type error in 6th argument to `h'; `incomplete vstr' (aka `volatile incomplete struct tag') given for `myint' (aka `int')
      h(Myint, Vint, Myfloat, Pint, Pvint, Vstr);
                                           ^~~~
./d-xtra-ttype-10.c:30:10: note - previous declaration was here
      void h(str, str, vstr, vstr, str, myint);
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-xtra-ttype-10.c:32:5: warning - implicit declaration of a function
      h2(Str, Vstr);
      ^~~
./d-xtra-ttype-10.c:32:5: warning - missing prototype from `h2'
      h2(Str, Vstr);
      ^~~
./d-xtra-ttype-10.c:32:8: ERROR - type error in 1st argument to `h2'; `incomplete str' (aka `incomplete struct tag') is an incomplete type
      h2(Str, Vstr);
         ^~~
./d-xtra-ttype-10.c:32:13: ERROR - type error in 2nd argument to `h2'; `incomplete vstr' (aka `volatile incomplete struct tag') is an incomplete type
      h2(Str, Vstr);
              ^~~~
