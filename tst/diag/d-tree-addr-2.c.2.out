./d-tree-addr-2.c:1:29: warning - signedness of plain bit-field is implementation-defined
  struct tag { int x, y[10], z:4; } g(void);
               ~~~            ^
./d-tree-addr-2.c:7:6: ERROR - lvalue required
      (&1)[0] = 0;
       ^~
./d-tree-addr-2.c:8:10: ERROR - lvalue required
      x = (&1)[0];
           ^~
./d-tree-addr-2.c:9:10: ERROR - lvalue required
      x = (&1)[0] * 2;
           ^~
./d-tree-addr-2.c:10:6: ERROR - lvalue required
      (&1)[1] = 0;
       ^~
./d-tree-addr-2.c:11:10: ERROR - lvalue required
      x = (&1)[1];
           ^~
./d-tree-addr-2.c:12:10: ERROR - lvalue required
      x = (&1)[1] * 2;
           ^~
./d-tree-addr-2.c:13:6: ERROR - lvalue required
      (&1)[x] = 0;
       ^~
./d-tree-addr-2.c:14:10: ERROR - lvalue required
      x = (&1)[x];
           ^~
./d-tree-addr-2.c:15:10: ERROR - lvalue required
      x = (&1)[x] * 2;
           ^~
./d-tree-addr-2.c:16:7: ERROR - lvalue required
      *(&1) = 0;
        ^~
./d-tree-addr-2.c:17:11: ERROR - lvalue required
      x = *(&1);
            ^~
./d-tree-addr-2.c:18:11: ERROR - lvalue required
      x = *(&1) * 2;
            ^~
./d-tree-addr-2.c:20:6: ERROR - lvalue required
      (&(x-1))[0] = 0;
       ^~~~~~
./d-tree-addr-2.c:21:10: ERROR - lvalue required
      x = (&(x-1))[0];
           ^~~~~~
./d-tree-addr-2.c:22:10: ERROR - lvalue required
      x = (&(x-1))[0] * 2;
           ^~~~~~
./d-tree-addr-2.c:23:6: ERROR - lvalue required
      (&(x-1))[1] = 0;
       ^~~~~~
./d-tree-addr-2.c:24:10: ERROR - lvalue required
      x = (&(x-1))[1];
           ^~~~~~
./d-tree-addr-2.c:25:10: ERROR - lvalue required
      x = (&(x-1))[1] * 2;
           ^~~~~~
./d-tree-addr-2.c:26:6: ERROR - lvalue required
      (&(x-1))[x] = 0;
       ^~~~~~
./d-tree-addr-2.c:27:10: ERROR - lvalue required
      x = (&(x-1))[x];
           ^~~~~~
./d-tree-addr-2.c:28:10: ERROR - lvalue required
      x = (&(x-1))[x] * 2;
           ^~~~~~
./d-tree-addr-2.c:29:7: ERROR - lvalue required
      *(&(x-1)) = 0;
        ^~~~~~
./d-tree-addr-2.c:30:11: ERROR - lvalue required
      x = *(&(x-1));
            ^~~~~~
./d-tree-addr-2.c:31:11: ERROR - lvalue required
      x = *(&(x-1)) * 2;
            ^~~~~~
./d-tree-addr-2.c:33:6: ERROR - lvalue required
      (&(y=1))[0] = 0;
       ^~~~~~
./d-tree-addr-2.c:34:10: ERROR - lvalue required
      x = (&(y=1))[0];
           ^~~~~~
./d-tree-addr-2.c:35:10: ERROR - lvalue required
      x = (&(y=1))[0] * 2;
           ^~~~~~
./d-tree-addr-2.c:36:6: ERROR - lvalue required
      (&(y=1))[1] = 0;
       ^~~~~~
./d-tree-addr-2.c:37:10: ERROR - lvalue required
      x = (&(y=1))[1];
           ^~~~~~
./d-tree-addr-2.c:38:10: ERROR - lvalue required
      x = (&(y=1))[1] * 2;
           ^~~~~~
./d-tree-addr-2.c:39:6: ERROR - lvalue required
      (&(y=1))[x] = 0;
       ^~~~~~
./d-tree-addr-2.c:40:10: ERROR - lvalue required
      x = (&(y=1))[x];
           ^~~~~~
./d-tree-addr-2.c:41:10: ERROR - lvalue required
      x = (&(y=1))[x] * 2;
           ^~~~~~
./d-tree-addr-2.c:42:7: ERROR - lvalue required
      *(&(y=1)) = 0;
        ^~~~~~
./d-tree-addr-2.c:43:11: ERROR - lvalue required
      x = *(&(y=1));
            ^~~~~~
./d-tree-addr-2.c:44:11: ERROR - lvalue required
      x = *(&(y=1)) * 2;
            ^~~~~~
./d-tree-addr-2.c:46:6: ERROR - lvalue required
      (&(y++))[0] = 0;
       ^~~~~~
./d-tree-addr-2.c:47:10: ERROR - lvalue required
      x = (&(y++))[0];
           ^~~~~~
./d-tree-addr-2.c:48:10: ERROR - lvalue required
      x = (&(y++))[0] * 2;
           ^~~~~~
./d-tree-addr-2.c:49:6: ERROR - lvalue required
      (&(y++))[1] = 0;
       ^~~~~~
./d-tree-addr-2.c:50:10: ERROR - lvalue required
      x = (&(y++))[1];
           ^~~~~~
./d-tree-addr-2.c:51:10: ERROR - lvalue required
      x = (&(y++))[1] * 2;
           ^~~~~~
./d-tree-addr-2.c:52:6: ERROR - lvalue required
      (&(y++))[x] = 0;
       ^~~~~~
./d-tree-addr-2.c:53:10: ERROR - lvalue required
      x = (&(y++))[x];
           ^~~~~~
./d-tree-addr-2.c:54:10: ERROR - lvalue required
      x = (&(y++))[x] * 2;
           ^~~~~~
./d-tree-addr-2.c:55:7: ERROR - lvalue required
      *(&(y++)) = 0;
        ^~~~~~
./d-tree-addr-2.c:56:11: ERROR - lvalue required
      x = *(&(y++));
            ^~~~~~
./d-tree-addr-2.c:57:11: ERROR - lvalue required
      x = *(&(y++)) * 2;
            ^~~~~~
./d-tree-addr-2.c:59:6: ERROR - lvalue required
      (&(x==y))[0] = 0;
       ^~~~~~~
./d-tree-addr-2.c:60:10: ERROR - lvalue required
      x = (&(x==y))[0];
           ^~~~~~~
./d-tree-addr-2.c:61:10: ERROR - lvalue required
      x = (&(x==y))[0] * 2;
           ^~~~~~~
./d-tree-addr-2.c:62:6: ERROR - lvalue required
      (&(x==y))[1] = 0;
       ^~~~~~~
./d-tree-addr-2.c:63:10: ERROR - lvalue required
      x = (&(x==y))[1];
           ^~~~~~~
./d-tree-addr-2.c:64:10: ERROR - lvalue required
      x = (&(x==y))[1] * 2;
           ^~~~~~~
./d-tree-addr-2.c:65:6: ERROR - lvalue required
      (&(x==y))[x] = 0;
       ^~~~~~~
./d-tree-addr-2.c:66:10: ERROR - lvalue required
      x = (&(x==y))[x];
           ^~~~~~~
./d-tree-addr-2.c:67:10: ERROR - lvalue required
      x = (&(x==y))[x] * 2;
           ^~~~~~~
./d-tree-addr-2.c:68:7: ERROR - lvalue required
      *(&(x==y)) = 0;
        ^~~~~~~
./d-tree-addr-2.c:69:11: ERROR - lvalue required
      x = *(&(x==y));
            ^~~~~~~
./d-tree-addr-2.c:70:11: ERROR - lvalue required
      x = *(&(x==y)) * 2;
            ^~~~~~~
./d-tree-addr-2.c:72:6: ERROR - lvalue required
      (&(x||y))[0] = 0;
       ^~~~~~~
./d-tree-addr-2.c:73:10: ERROR - lvalue required
      x = (&(x||y))[0];
           ^~~~~~~
./d-tree-addr-2.c:74:10: ERROR - lvalue required
      x = (&(x||y))[0] * 2;
           ^~~~~~~
./d-tree-addr-2.c:75:6: ERROR - lvalue required
      (&(x||y))[1] = 0;
       ^~~~~~~
./d-tree-addr-2.c:76:10: ERROR - lvalue required
      x = (&(x||y))[1];
           ^~~~~~~
./d-tree-addr-2.c:77:10: ERROR - lvalue required
      x = (&(x||y))[1] * 2;
           ^~~~~~~
./d-tree-addr-2.c:78:6: ERROR - lvalue required
      (&(x||y))[x] = 0;
       ^~~~~~~
./d-tree-addr-2.c:79:10: ERROR - lvalue required
      x = (&(x||y))[x];
           ^~~~~~~
./d-tree-addr-2.c:80:10: ERROR - lvalue required
      x = (&(x||y))[x] * 2;
           ^~~~~~~
./d-tree-addr-2.c:81:7: ERROR - lvalue required
      *(&(x||y)) = 0;
        ^~~~~~~
./d-tree-addr-2.c:82:11: ERROR - lvalue required
      x = *(&(x||y));
            ^~~~~~~
./d-tree-addr-2.c:83:11: ERROR - lvalue required
      x = *(&(x||y)) * 2;
            ^~~~~~~
./d-tree-addr-2.c:85:6: ERROR - lvalue required
      (&(x?x:y))[0] = 0;
       ^~~~~~~~
./d-tree-addr-2.c:86:10: ERROR - lvalue required
      x = (&(x?x:y))[0];
           ^~~~~~~~
./d-tree-addr-2.c:87:10: ERROR - lvalue required
      x = (&(x?x:y))[0] * 2;
           ^~~~~~~~
./d-tree-addr-2.c:88:6: ERROR - lvalue required
      (&(x?x:y))[1] = 0;
       ^~~~~~~~
./d-tree-addr-2.c:89:10: ERROR - lvalue required
      x = (&(x?x:y))[1];
           ^~~~~~~~
./d-tree-addr-2.c:90:10: ERROR - lvalue required
      x = (&(x?x:y))[1] * 2;
           ^~~~~~~~
./d-tree-addr-2.c:91:6: ERROR - lvalue required
      (&(x?x:y))[x] = 0;
       ^~~~~~~~
./d-tree-addr-2.c:92:10: ERROR - lvalue required
      x = (&(x?x:y))[x];
           ^~~~~~~~
./d-tree-addr-2.c:93:10: ERROR - lvalue required
      x = (&(x?x:y))[x] * 2;
           ^~~~~~~~
./d-tree-addr-2.c:94:7: ERROR - lvalue required
      *(&(x?x:y)) = 0;
        ^~~~~~~~
./d-tree-addr-2.c:95:11: ERROR - lvalue required
      x = *(&(x?x:y));
            ^~~~~~~~
./d-tree-addr-2.c:96:11: ERROR - lvalue required
      x = *(&(x?x:y)) * 2;
            ^~~~~~~~
./d-tree-addr-2.c:98:8: ERROR - conversion to `struct' is not allowed
      (&((struct tag)1))->x = 1;
         ^~~~~~~~~~~~~
./d-tree-addr-2.c:99:8: ERROR - conversion to `struct' is not allowed
      (&((struct tag)1))->y[1] = 1;
         ^~~~~~~~~~~~~
./d-tree-addr-2.c:100:8: ERROR - conversion to `struct' is not allowed
      (&((struct tag)1))->z = 1;
         ^~~~~~~~~~~~~
./d-tree-addr-2.c:101:12: ERROR - conversion to `struct' is not allowed
      x = (&((struct tag)1))->x;
             ^~~~~~~~~~~~~
./d-tree-addr-2.c:102:12: ERROR - conversion to `struct' is not allowed
      x = (&((struct tag)1))->y[1];
             ^~~~~~~~~~~~~
./d-tree-addr-2.c:103:12: ERROR - conversion to `struct' is not allowed
      x = (&((struct tag)1))->z;
             ^~~~~~~~~~~~~
./d-tree-addr-2.c:105:6: ERROR - lvalue required
      (&g())->x = 1;
       ^~~~
./d-tree-addr-2.c:106:6: ERROR - lvalue required
      (&g())->y[1] = 1;
       ^~~~
./d-tree-addr-2.c:107:6: ERROR - lvalue required
      (&g())->z = 1;
       ^~~~
./d-tree-addr-2.c:108:10: ERROR - lvalue required
      x = (&g())->x;
           ^~~~
./d-tree-addr-2.c:109:10: ERROR - lvalue required
      x = (&g())->y[1];
           ^~~~
./d-tree-addr-2.c:110:10: ERROR - lvalue required
      x = (&g())->z;
           ^~~~
