./d-tree-npce-8.c:3:8: warning - integer constant expression requried for array size
  int a1[(int)(double)3];         /* no ice */
         ^~~~~~~~~~~~~~
./d-tree-npce-8.c:4:8: warning - integer constant expression requried for array size
  int a2[1 || (int)(double)3];    /* no ice */
         ^~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:7:10: warning - non-portable constant expression for initializer
  int x2 = (int *)(void *)0 - (int *)(void *)0;            /* no ace */
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:8:10: warning - non-portable constant expression for initializer
  int x3 = (int *)0 - (int *)0;                            /* no ace */
           ^~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:9:10: warning - non-portable constant expression for initializer
  int x4 = 1 || (int *)(void *)0 - (int *)(void *)0;       /* no ace */
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:10:10: warning - non-portable constant expression for initializer
  int x5 = 1 || (int *)0 - (int *)0;                       /* no ace */
           ^~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:11:10: warning - non-portable constant expression for initializer
  int x6 = (1)? 0: (int *)(void *)0 - (int *)(void *)0;    /* no ace */
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:12:10: warning - non-portable constant expression for initializer
  int x7 = (1)? 0: (int *)0 - (int *)0;                    /* no ace */
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:13:16: warning - expression result not used
  int x8 = 0 && ((int *)(void *)0-(int *)(void *)0, 1);    /* no ace */
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:13:10: warning - non-portable constant expression for initializer
  int x8 = 0 && ((int *)(void *)0-(int *)(void *)0, 1);    /* no ace */
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:14:16: warning - expression result not used
  int x9 = 0 && ((int *)0-(int *)0, 1);                    /* no ace */
                 ^~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:14:10: warning - non-portable constant expression for initializer
  int x9 = 0 && ((int *)0-(int *)0, 1);                    /* no ace */
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:16:11: warning - conversion between pointer and integer is not portable
  int x10 = (int)(void *)0;              /* no ace */
            ^~~~~~~~~~~~~~
./d-tree-npce-8.c:16:11: warning - non-portable constant expression for initializer
  int x10 = (int)(void *)0;              /* no ace */
            ^~~~~~~~~~~~~~
./d-tree-npce-8.c:17:16: warning - conversion between pointer and integer is not portable
  int x11 = 0 && (int)(void *)0;         /* no ace */
                 ^~~~~~~~~~~~~~
./d-tree-npce-8.c:17:11: warning - non-portable constant expression for initializer
  int x11 = 0 && (int)(void *)0;         /* no ace */
            ^~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:18:11: warning - conversion between pointer and integer is not portable
  int x12 = (int)&x10;                   /* no ace */
            ^~~~~~~~~
./d-tree-npce-8.c:18:11: ERROR - initializer must be constant
  int x12 = (int)&x10;                   /* no ace */
            ^~~~~~~~~
./d-tree-npce-8.c:19:16: warning - conversion between pointer and integer is not portable
  int x13 = 0 && (int)&x10;              /* no ace */
                 ^~~~~~~~~
./d-tree-npce-8.c:19:11: warning - non-portable constant expression for initializer
  int x13 = 0 && (int)&x10;              /* no ace */
            ^~~~~~~~~~~~~~
./d-tree-npce-8.c:20:17: warning - conversion between pointer and integer is not portable
  int x14 = 0 && ((int)(void *)0, 1);    /* no ace */
                  ^~~~~~~~~~~~~~
./d-tree-npce-8.c:20:17: warning - expression result not used
  int x14 = 0 && ((int)(void *)0, 1);    /* no ace */
                  ^~~~~~~~~~~~~~
./d-tree-npce-8.c:20:11: warning - non-portable constant expression for initializer
  int x14 = 0 && ((int)(void *)0, 1);    /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:21:17: warning - conversion between pointer and integer is not portable
  int x15 = 0 && ((int)&x10, 1);         /* no ace */
                  ^~~~~~~~~
./d-tree-npce-8.c:21:17: warning - expression result not used
  int x15 = 0 && ((int)&x10, 1);         /* no ace */
                  ^~~~~~~~~
./d-tree-npce-8.c:21:11: warning - non-portable constant expression for initializer
  int x15 = 0 && ((int)&x10, 1);         /* no ace */
            ^~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:23:19: warning - conversion between pointer and integer is not portable
  int *x16 = (int *)(int)(void *)0;                         /* no addr */
                    ^~~~~~~~~~~~~~
./d-tree-npce-8.c:23:12: warning - conversion between pointer and integer is not portable
  int *x16 = (int *)(int)(void *)0;                         /* no addr */
             ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:23:12: warning - non-portable constant expression for initializer
  int *x16 = (int *)(int)(void *)0;                         /* no addr */
             ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:24:27: warning - conversion between pointer and integer is not portable
  int *x17 = (1)? 0: (int *)(int)(void *)0;
                            ^~~~~~~~~~~~~~
./d-tree-npce-8.c:24:20: warning - conversion between pointer and integer is not portable
  int *x17 = (1)? 0: (int *)(int)(void *)0;
                     ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:25:28: warning - conversion between pointer and integer is not portable
  int *x18 = (1)? 0: ((int *)(int)(void *)0, (void *)0);
                             ^~~~~~~~~~~~~~
./d-tree-npce-8.c:25:21: warning - conversion between pointer and integer is not portable
  int *x18 = (1)? 0: ((int *)(int)(void *)0, (void *)0);
                      ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:25:21: warning - expression result not used
  int *x18 = (1)? 0: ((int *)(int)(void *)0, (void *)0);
                      ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:26:24: warning - conversion between pointer and integer is not portable
  int *x19 = (1)? (int *)(int)(void *)0: 0;                 /* no addr */
                         ^~~~~~~~~~~~~~
./d-tree-npce-8.c:26:17: warning - conversion between pointer and integer is not portable
  int *x19 = (1)? (int *)(int)(void *)0: 0;                 /* no addr */
                  ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:26:12: warning - non-portable constant expression for initializer
  int *x19 = (1)? (int *)(int)(void *)0: 0;                 /* no addr */
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:27:19: warning - conversion between pointer and integer is not portable
  int *x20 = (int *)(int)&x16;                              /* no addr */
                    ^~~~~~~~~
./d-tree-npce-8.c:27:12: warning - conversion between pointer and integer is not portable
  int *x20 = (int *)(int)&x16;                              /* no addr */
             ^~~~~~~~~~~~~~~~
./d-tree-npce-8.c:27:12: ERROR - initializer must be constant
  int *x20 = (int *)(int)&x16;                              /* no addr */
             ^~~~~~~~~~~~~~~~
./d-tree-npce-8.c:28:27: warning - conversion between pointer and integer is not portable
  int *x21 = (1)? 0: (int *)(int)&x16;
                            ^~~~~~~~~
./d-tree-npce-8.c:28:20: warning - conversion between pointer and integer is not portable
  int *x21 = (1)? 0: (int *)(int)&x16;
                     ^~~~~~~~~~~~~~~~
./d-tree-npce-8.c:29:28: warning - conversion between pointer and integer is not portable
  int *x22 = (1)? 0: ((int *)(int)&x16, (void *)0);
                             ^~~~~~~~~
./d-tree-npce-8.c:29:21: warning - conversion between pointer and integer is not portable
  int *x22 = (1)? 0: ((int *)(int)&x16, (void *)0);
                      ^~~~~~~~~~~~~~~~
./d-tree-npce-8.c:29:21: warning - expression result not used
  int *x22 = (1)? 0: ((int *)(int)&x16, (void *)0);
                      ^~~~~~~~~~~~~~~~
./d-tree-npce-8.c:30:24: warning - conversion between pointer and integer is not portable
  int *x23 = (1)? (int *)(int)&x16: 0;                      /* no addr */
                         ^~~~~~~~~
./d-tree-npce-8.c:30:17: warning - conversion between pointer and integer is not portable
  int *x23 = (1)? (int *)(int)&x16: 0;                      /* no addr */
                  ^~~~~~~~~~~~~~~~
./d-tree-npce-8.c:30:12: ERROR - initializer must be constant
  int *x23 = (1)? (int *)(int)&x16: 0;                      /* no addr */
             ^~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:33:12: warning - conversion between pointer and integer is not portable
  int *x25 = (int *)1;
             ^~~~~~~~
./d-tree-npce-8.c:36:12: warning - expression result not used
  int x27 = (1, 3.14, 3.14);     /* no ace */
             ^
./d-tree-npce-8.c:36:15: warning - expression result not used
  int x27 = (1, 3.14, 3.14);     /* no ace */
                ^~~~
./d-tree-npce-8.c:36:11: warning - non-portable constant expression for initializer
  int x27 = (1, 3.14, 3.14);     /* no ace */
            ^~~~~~~~~~~~~~~
./d-tree-npce-8.c:38:11: warning - non-portable constant expression for initializer
  int x28 = (0)? 0: (int *)(void *)0 - (int *)(void *)0;       /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:39:11: warning - non-portable constant expression for initializer
  int x29 = 1 && (int *)(void *)0 - (int *)(void *)0;          /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:40:20: warning - expression result not used
  int x30 = (0)? 0: (0, (int *)(void *)0-(int *)(void *)0);    /* no ace */
                     ^
./d-tree-npce-8.c:40:11: warning - non-portable constant expression for initializer
  int x30 = (0)? 0: (0, (int *)(void *)0-(int *)(void *)0);    /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:41:11: warning - non-portable constant expression for initializer
  int x31 = (0)? 0: (int *)0 - (int *)0;                       /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:42:11: warning - non-portable constant expression for initializer
  int x32 = 1 && (int *)0 - (int *)0;                          /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:43:20: warning - expression result not used
  int x33 = (0)? 0: (0, (int *)0-(int *)0);                    /* no ace */
                     ^
./d-tree-npce-8.c:43:11: warning - non-portable constant expression for initializer
  int x33 = (0)? 0: (0, (int *)0-(int *)0);                    /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:45:21: warning - conversion between pointer and integer is not portable
  int x34 = (1)? (int)(void *)1: 0;         /* no ace */
                      ^~~~~~~~~
./d-tree-npce-8.c:45:16: warning - conversion between pointer and integer is not portable
  int x34 = (1)? (int)(void *)1: 0;         /* no ace */
                 ^~~~~~~~~~~~~~
./d-tree-npce-8.c:45:11: warning - non-portable constant expression for initializer
  int x34 = (1)? (int)(void *)1: 0;         /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:46:25: warning - conversion between pointer and integer is not portable
  int x35 = (1)? (1, (int)(void *)1): 0;    /* no ace */
                          ^~~~~~~~~
./d-tree-npce-8.c:46:20: warning - conversion between pointer and integer is not portable
  int x35 = (1)? (1, (int)(void *)1): 0;    /* no ace */
                     ^~~~~~~~~~~~~~
./d-tree-npce-8.c:46:17: warning - expression result not used
  int x35 = (1)? (1, (int)(void *)1): 0;    /* no ace */
                  ^
./d-tree-npce-8.c:46:11: warning - non-portable constant expression for initializer
  int x35 = (1)? (1, (int)(void *)1): 0;    /* no ace */
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:48:32: warning - conversion between pointer and integer is not portable
  int *x36 = (0)? 0: (int *)(int)(void *)1;                 /* no addr */
                                 ^~~~~~~~~
./d-tree-npce-8.c:48:27: warning - conversion between pointer and integer is not portable
  int *x36 = (0)? 0: (int *)(int)(void *)1;                 /* no addr */
                            ^~~~~~~~~~~~~~
./d-tree-npce-8.c:48:20: warning - conversion between pointer and integer is not portable
  int *x36 = (0)? 0: (int *)(int)(void *)1;                 /* no addr */
                     ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:48:12: warning - non-portable constant expression for initializer
  int *x36 = (0)? 0: (int *)(int)(void *)1;                 /* no addr */
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:49:44: warning - conversion between pointer and integer is not portable
  int *x37 = (0)? 0: ((void *)0, (int *)(int)(void *)1);    /* no addr */
                                             ^~~~~~~~~
./d-tree-npce-8.c:49:39: warning - conversion between pointer and integer is not portable
  int *x37 = (0)? 0: ((void *)0, (int *)(int)(void *)1);    /* no addr */
                                        ^~~~~~~~~~~~~~
./d-tree-npce-8.c:49:32: warning - conversion between pointer and integer is not portable
  int *x37 = (0)? 0: ((void *)0, (int *)(int)(void *)1);    /* no addr */
                                 ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-8.c:49:21: warning - expression result not used
  int *x37 = (0)? 0: ((void *)0, (int *)(int)(void *)1);    /* no addr */
                      ^~~~~~~~~
./d-tree-npce-8.c:49:12: warning - non-portable constant expression for initializer
  int *x37 = (0)? 0: ((void *)0, (int *)(int)(void *)1);    /* no addr */
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
