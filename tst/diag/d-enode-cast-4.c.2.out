./d-enode-cast-4.c:1:11: warning - overflow in converting constant expression from `int' to `char'
  char x1 = 7905;    /* overflow */
          ~ ^~~~
./d-enode-cast-4.c:6:19: warning - signedness of plain bit-field is implementation-defined
      struct { int x:1, y:2; } s;
               ~~~  ^
./d-enode-cast-4.c:6:24: warning - signedness of plain bit-field is implementation-defined
      struct { int x:1, y:2; } s;
               ~~~       ^
./d-enode-cast-4.c:8:19: warning - overflow in converting constant expression from `int' to `char'
      char x2[] = { 256, 257 };    /* overflow */
                    ^~~
./d-enode-cast-4.c:8:24: warning - overflow in converting constant expression from `int' to `char'
      char x2[] = { 256, 257 };    /* overflow */
                         ^~~
./d-enode-cast-4.c:11:11: warning - overflow in converting constant expression from `double' to `int'
      s.y = (double)~0UL;                          /* overflow */
          ~ ^~~~~~~~~~~~
./d-enode-cast-4.c:12:5: warning - expression result not used
      (!~0ul);
      ^~~~~~~
./d-enode-cast-4.c:13:7: ERROR - operands of == have illegal types `pointer to int' and `unsigned long'
      p == ~0ul;
      ~ ^~ ~~~~
./d-enode-cast-4.c:14:10: warning - overflow in converting constant expression from `double' to `unsigned long'
      ul = (double)~0UL + 1.0;                     /* overflow */
         ~ ^~~~~~~~~~~~~~~~~~
./d-enode-cast-4.c:18:14: warning - overflow in converting constant expression from `unsigned long' to `int'
          case ~0Ul:    /* overflow */
          ~~~~ ^~~~
./d-enode-cast-4.c:22:5: warning - expression result not used
      (pc + 1) + ~0ul;
      ^~~~~~~~~~~~~~~
./d-enode-cast-4.c:23:5: warning - expression result not used
      -1 | ~0ul;
      ^~~~~~~~~
./d-enode-cast-4.c:24:5: warning - expression result not used
      -1 % ~0UL;
      ^~~~~~~~~
./d-enode-cast-4.c:25:7: warning - shift by 4294967295 is undefined
      1 << ~0ul;
        ^~ ~~~~
./d-enode-cast-4.c:25:5: warning - expression result not used
      1 << ~0ul;
      ^~~~~~~~~
./d-enode-cast-4.c:26:5: warning - expression result not used
      pc + ~0ul;
      ^~~~~~~~~
./d-enode-cast-4.c:27:5: warning - expression result not used
      pc - ~0Ul;
      ^~~~~~~~~
./d-enode-cast-4.c:28:5: warning - unsigned operand of unary -
      -~0ul;
      ^~~~~
./d-enode-cast-4.c:28:5: warning - expression result not used
      -~0ul;
      ^~~~~
./d-enode-cast-4.c:29:5: warning - expression result not used
      ~-1;
      ^~~
./d-enode-cast-4.c:30:7: warning - overflow in converting constant expression from `unsigned long' to `short'
      f(~0ul, 256);       /* overflow */
        ^~~~
./d-enode-cast-4.c:30:13: warning - overflow in converting constant expression from `int' to `char'
      f(~0ul, 256);       /* overflow */
              ^~~
./d-enode-cast-4.c:32:12: warning - overflow in converting constant expression from `unsigned long' to `short'
      return ~0uL;    /* overflow */
      ~~~~~~ ^~~~
