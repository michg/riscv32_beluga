./d-tree-npce-4.c:14:11: warning - non-portable constant expression for initializer
  int *q1 = (0 && 1.0) + &s;
            ^~~~~~~~~~~~~~~
./d-tree-npce-4.c:15:22: warning - address of `d' always results in true
  int *q2 = &s + (0 && &d);
                       ^~
./d-tree-npce-4.c:15:11: warning - non-portable constant expression for initializer
  int *q2 = &s + (0 && &d);
            ^~~~~~~~~~~~~~
./d-tree-npce-4.c:16:11: ERROR - initializer must be constant
  int *q3 = (0.0, 1, 2) + &s;
            ^~~~~~~~~~~~~~~~
./d-tree-npce-4.c:17:11: warning - non-portable constant expression for initializer
  int *q4 = (0 && (0.0, 1, 2)) + &s;
            ^~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:18:11: warning - non-portable constant expression for initializer
  int *q5 = &s + (0 && (0, 1.0, 2));
            ^~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:19:11: warning - non-portable constant expression for initializer
  int *q6 = (1 || (0.0, 1, 2)) + &s;
            ^~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:20:11: warning - non-portable constant expression for initializer
  int *q7 = &s - (1 || (0, 1, 2.0));
            ^~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:21:11: ERROR - initializer must be constant
  int *q8 = &s - ((0.0, 1)? 1: 2);
            ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:22:11: ERROR - initializer must be constant
  int *q9 = ((1)? (0.0, 1): 2) + &s;
            ^~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:23:12: warning - non-portable constant expression for initializer
  int *q10 = ((1)? 1: (0, 1.0, 2)) + &s;
             ^~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:24:12: ERROR - initializer must be constant
  int *q11 = (0, 1) + &s;
             ^~~~~~~~~~~
./d-tree-npce-4.c:25:12: ERROR - initializer must be constant
  int *q12 = &s - (0, 1, 2);
             ^~~~~~~~~~~~~~
./d-tree-npce-4.c:26:13: warning - expression result not used
  int *q13 = ((int)0.0, 1, 2) + &s;
              ^~~~~~~~
./d-tree-npce-4.c:26:12: ERROR - initializer must be constant
  int *q13 = ((int)0.0, 1, 2) + &s;
             ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:27:12: ERROR - initializer must be constant
  int *q14 = &s - ((0, 1)? 1: 2);
             ^~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:28:12: ERROR - initializer must be constant
  int *q15 = ((1)? (0, 1): 2) + &s;
             ^~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:29:19: warning - expression result not used
  int *q16 = &s - (((int)0.0, 1)? 1: 2);
                    ^~~~~~~~
./d-tree-npce-4.c:29:12: ERROR - initializer must be constant
  int *q16 = &s - (((int)0.0, 1)? 1: 2);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:30:19: warning - expression result not used
  int *q17 = ((1)? ((unsigned)0.0, 1): 2) + &s;
                    ^~~~~~~~~~~~~
./d-tree-npce-4.c:30:12: ERROR - initializer must be constant
  int *q17 = ((1)? ((unsigned)0.0, 1): 2) + &s;
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:31:12: warning - non-portable constant expression for initializer
  int *q18 = (1 || (0, 1, (int)2.0)) + &s;
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:32:12: warning - non-portable constant expression for initializer
  int *q19 = ((1)? 1: (0, 1, 2)) + &s;
             ^~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:33:25: warning - expression result not used
  int *q20 = ((1)? 1: (0, (int)1.0, 2)) + &s;
                          ^~~~~~~~
./d-tree-npce-4.c:33:12: warning - non-portable constant expression for initializer
  int *q20 = ((1)? 1: (0, (int)1.0, 2)) + &s;
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:34:19: warning - expression result not used
  int *q21 = (0 && ((unsigned)0.0, 1, 2)) + &s;
                    ^~~~~~~~~~~~~
./d-tree-npce-4.c:34:12: warning - non-portable constant expression for initializer
  int *q21 = (0 && ((unsigned)0.0, 1, 2)) + &s;
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:41:21: warning - address of `d' always results in true
          sizeof(0 && &d) + &s,
                      ^~
./d-tree-npce-4.c:51:21: warning - address of `d' always results in true
          sizeof(0 && &d),
                      ^~
./d-tree-npce-4.c:60:39: warning - conversion between pointer and integer is not portable
      static int *b1 = &s + sizeof(int [(int)(void *)0+1]) + (int)(void *)0+1;
                                        ^~~~~~~~~~~~~~
./d-tree-npce-4.c:60:39: warning - integer constant expression requried for array size
      static int *b1 = &s + sizeof(int [(int)(void *)0+1]) + (int)(void *)0+1;
                                        ^~~~~~~~~~~~~~~~
./d-tree-npce-4.c:60:60: warning - conversion between pointer and integer is not portable
      static int *b1 = &s + sizeof(int [(int)(void *)0+1]) + (int)(void *)0+1;
                                                             ^~~~~~~~~~~~~~
./d-tree-npce-4.c:60:22: warning - non-portable constant expression for initializer
      static int *b1 = &s + sizeof(int [(int)(void *)0+1]) + (int)(void *)0+1;
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:61:39: warning - conversion between pointer and integer is not portable
      static int *b2 = sizeof(int [(int)(char *)1]) + &s - (int)(char *)1;
                                        ^~~~~~~~~
./d-tree-npce-4.c:61:34: warning - conversion between pointer and integer is not portable
      static int *b2 = sizeof(int [(int)(char *)1]) + &s - (int)(char *)1;
                                   ^~~~~~~~~~~~~~
./d-tree-npce-4.c:61:34: warning - integer constant expression requried for array size
      static int *b2 = sizeof(int [(int)(char *)1]) + &s - (int)(char *)1;
                                   ^~~~~~~~~~~~~~
./d-tree-npce-4.c:61:63: warning - conversion between pointer and integer is not portable
      static int *b2 = sizeof(int [(int)(char *)1]) + &s - (int)(char *)1;
                                                                ^~~~~~~~~
./d-tree-npce-4.c:61:58: warning - conversion between pointer and integer is not portable
      static int *b2 = sizeof(int [(int)(char *)1]) + &s - (int)(char *)1;
                                                           ^~~~~~~~~~~~~~
./d-tree-npce-4.c:61:22: warning - non-portable constant expression for initializer
      static int *b2 = sizeof(int [(int)(char *)1]) + &s - (int)(char *)1;
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:62:41: warning - conversion between pointer and integer is not portable
      static int *b3 = &s - sizeof(int [!!(char *)1]) - !!(char *)1;
                                          ^~~~~~~~~
./d-tree-npce-4.c:62:39: warning - integer constant expression requried for array size
      static int *b3 = &s - sizeof(int [!!(char *)1]) - !!(char *)1;
                                        ^~~~~~~~~~~
./d-tree-npce-4.c:62:57: warning - conversion between pointer and integer is not portable
      static int *b3 = &s - sizeof(int [!!(char *)1]) - !!(char *)1;
                                                          ^~~~~~~~~
./d-tree-npce-4.c:62:22: warning - non-portable constant expression for initializer
      static int *b3 = &s - sizeof(int [!!(char *)1]) - !!(char *)1;
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:63:39: warning - conversion between pointer and integer is not portable
      static int *b4 = &s + sizeof(int [(char *)1 || (char *)0]) + ((char *)1 || (char *)0);
                                        ^~~~~~~~~
./d-tree-npce-4.c:63:39: warning - integer constant expression requried for array size
      static int *b4 = &s + sizeof(int [(char *)1 || (char *)0]) + ((char *)1 || (char *)0);
                                        ^~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:63:67: warning - conversion between pointer and integer is not portable
      static int *b4 = &s + sizeof(int [(char *)1 || (char *)0]) + ((char *)1 || (char *)0);
                                                                    ^~~~~~~~~
./d-tree-npce-4.c:63:22: warning - non-portable constant expression for initializer
      static int *b4 = &s + sizeof(int [(char *)1 || (char *)0]) + ((char *)1 || (char *)0);
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:64:49: warning - conversion between pointer and integer is not portable
      static int *b5 = &s + sizeof(int [(1)? (int)(void *)70: 0])+((1)? (int)(void *)70: 0);
                                                  ^~~~~~~~~~
./d-tree-npce-4.c:64:44: warning - conversion between pointer and integer is not portable
      static int *b5 = &s + sizeof(int [(1)? (int)(void *)70: 0])+((1)? (int)(void *)70: 0);
                                             ^~~~~~~~~~~~~~~
./d-tree-npce-4.c:64:39: warning - integer constant expression requried for array size
      static int *b5 = &s + sizeof(int [(1)? (int)(void *)70: 0])+((1)? (int)(void *)70: 0);
                                        ^~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:64:76: warning - conversion between pointer and integer is not portable
      static int *b5 = &s + sizeof(int [(1)? (int)(void *)70: 0])+((1)? (int)(void *)70: 0);
                                                                             ^~~~~~~~~~
./d-tree-npce-4.c:64:71: warning - conversion between pointer and integer is not portable
      static int *b5 = &s + sizeof(int [(1)? (int)(void *)70: 0])+((1)? (int)(void *)70: 0);
                                                                        ^~~~~~~~~~~~~~~
./d-tree-npce-4.c:64:22: warning - non-portable constant expression for initializer
      static int *b5 = &s + sizeof(int [(1)? (int)(void *)70: 0])+((1)? (int)(void *)70: 0);
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:66:22: warning - non-portable constant expression for initializer
      static int *c1 = &s + sizeof(0 && 1.0) + (0 && 1.0);
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:67:34: warning - address of `d' always results in true
      static int *c2 = sizeof(0 && &d) + &s + (0 && &d);
                                   ^~
./d-tree-npce-4.c:67:51: warning - address of `d' always results in true
      static int *c2 = sizeof(0 && &d) + &s + (0 && &d);
                                                    ^~
./d-tree-npce-4.c:67:22: warning - non-portable constant expression for initializer
      static int *c2 = sizeof(0 && &d) + &s + (0 && &d);
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:68:22: ERROR - initializer must be constant
      static int *c3 = &s - sizeof(0.0, 1, 2) - (0.0, 1, 2);
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:69:22: ERROR - initializer must be constant
      static int *c4 = sizeof(0 && (0.0, 1, 2)) + &s + (0.0, 1, 2);
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:70:22: warning - non-portable constant expression for initializer
      static int *c5 = &s + sizeof(1 || (0, 1, 2.0)) + (1 || (0, 1, 2.0));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:71:22: ERROR - initializer must be constant
      static int *c6 = sizeof((1)? (0.0, 1): 2) + &s + ((1)? (0.0, 1): 2);
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:72:22: warning - non-portable constant expression for initializer
      static int *c7 = sizeof((1)? 1: (0, 1.0, 2)) + &s + ((1)? 1: (0, 1.0, 2));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./d-tree-npce-4.c:72:17: warning - static `c7' defined but not referenced
      static int *c7 = sizeof((1)? 1: (0, 1.0, 2)) + &s + ((1)? 1: (0, 1.0, 2));
                  ^~
./d-tree-npce-4.c:71:17: warning - static `c6' defined but not referenced
      static int *c6 = sizeof((1)? (0.0, 1): 2) + &s + ((1)? (0.0, 1): 2);
                  ^~
./d-tree-npce-4.c:70:17: warning - static `c5' defined but not referenced
      static int *c5 = &s + sizeof(1 || (0, 1, 2.0)) + (1 || (0, 1, 2.0));
                  ^~
./d-tree-npce-4.c:69:17: warning - static `c4' defined but not referenced
      static int *c4 = sizeof(0 && (0.0, 1, 2)) + &s + (0.0, 1, 2);
                  ^~
./d-tree-npce-4.c:68:17: warning - static `c3' defined but not referenced
      static int *c3 = &s - sizeof(0.0, 1, 2) - (0.0, 1, 2);
                  ^~
./d-tree-npce-4.c:67:17: warning - static `c2' defined but not referenced
      static int *c2 = sizeof(0 && &d) + &s + (0 && &d);
                  ^~
./d-tree-npce-4.c:66:17: warning - static `c1' defined but not referenced
      static int *c1 = &s + sizeof(0 && 1.0) + (0 && 1.0);
                  ^~
./d-tree-npce-4.c:64:17: warning - static `b5' defined but not referenced
      static int *b5 = &s + sizeof(int [(1)? (int)(void *)70: 0])+((1)? (int)(void *)70: 0);
                  ^~
./d-tree-npce-4.c:63:17: warning - static `b4' defined but not referenced
      static int *b4 = &s + sizeof(int [(char *)1 || (char *)0]) + ((char *)1 || (char *)0);
                  ^~
./d-tree-npce-4.c:62:17: warning - static `b3' defined but not referenced
      static int *b3 = &s - sizeof(int [!!(char *)1]) - !!(char *)1;
                  ^~
./d-tree-npce-4.c:61:17: warning - static `b2' defined but not referenced
      static int *b2 = sizeof(int [(int)(char *)1]) + &s - (int)(char *)1;
                  ^~
./d-tree-npce-4.c:60:17: warning - static `b1' defined but not referenced
      static int *b1 = &s + sizeof(int [(int)(void *)0+1]) + (int)(void *)0+1;
                  ^~
./d-tree-npce-4.c:49:9: warning - local `b' set but not used
      int b[] = {
          ^
./d-tree-npce-4.c:39:10: warning - local `a' set but not used
      int *a[] = {
           ^
